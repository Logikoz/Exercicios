#include <stdlib.h>
#include <stdio.h>
//constante que define o tamanho da matriz/vetor
#define Max 2

void MostrarMatriz(float M[Max][Max]){
	int i, j;
	for(i = 0; i < Max; i++){
		for(j = 0; j < Max; j++){
			printf("%.4f\t", M[i][j]);
		}
		printf("\n");
	}
}

void MostrarVetor(float V[Max]){
	int i;
	for(i = 0; i < Max; i++){
		printf("%.4f\n", V[i]);
	}
}

void MultiplicarMatrizPorVetor(float A[Max][Max], float vetor[Max], float saida[Max]) {
	int i, j;
	float aux[Max];
	for(i = 0; i < Max; i++){
		for(j = 0; j < Max; j++){
			aux[j] = A[i][j] * vetor[j];
		}
		saida[i] = aux[0] + aux[1];
	}
}

void CalcularDeterminante(float M[Max][Max], float *detM){
	float aux[Max];
	aux[0] = M[0][0] * M[1][1];
	aux[1] = M[0][1] * M[1][0];
	*detM = aux[0] - aux[1];
}
/*
	{ ax + by = b1
	{ mx + ny = b2
	
	D1 = [ a  b ]  ;  D2 = [ a  b1 ]	;	D3 = [ b1 b ]
		 [ m  n ]		   [ m  b2 ]			 [ b2 n ]
	
		 D2   			 D3
	Y1 = __		;	Y2 = __
		 D1				 D1
	
	Di != 0
	i = [ 1, 2, 3 ]
		 
	   |		 K ( numero qualquer != 0)
	se |	Yi = __  	[ Infinitas soluçoes ]  (*)
	   |		 0
		 
	   |		 0 
	se |	Yi = __  	[ Impossivel de determinar ]  (**)
	   |		 0
	   
	senao [ Possivel de determinar ]  (***)
	
	0 - (*)
	1 - (**)
	2 - (***)
*/
unsigned short int VerificarResultadoDeterminante(float M[Max][Max], float v[Max]){
	float D1[Max][Max] = { { M[0][0], M[0][1] }, { M[1][0], M[1][1] } };
	float D2[Max][Max] = { { M[0][0], v[0] }, { M[1][0], v[1] } };
	float D3[Max][Max] = { { v[0], M[0][1] }, { v[1], M[1][1] } };
	
	float det1, det2, det3;
	CalcularDeterminante(D1, &det1);
	CalcularDeterminante(D2, &det2);
	CalcularDeterminante(D3, &det3);
	
	if ((det2 != 0 || det3 != 0) && det1 == 0){
		printf("====================================\n");
		printf("=        Infinitas Soluçoes        =\n");
		printf("====================================\n\n");
		return 0;
	}
	else if ((det2 == 0 || det3 == 0) && det1 == 0){
		printf("====================================\n");
		printf("=     Impossivel de Determinar     =\n");
		printf("====================================\n\n");
		return 1;
	}
	else
		return 2;
}

void CalcularInversaA(float A[Max][Max], float _A[Max][Max], float *detA){
	int i, j;
	float aux[Max][Max];
	for(i = 0; i < Max; i++){
		for(j = 0; j < Max; j++){			
			if(i == j)
				aux[i][j] = (i == 0) ? A[i+1][j+1] : A[i-1][j-1];
			else
				aux[i][j] = A[i][j] * -1;
		}
	}
	//fazendo a multiplicaçao do determinante pela matriz inversa.
	for(i = 0; i < Max; i++){
		for(j = 0; j < Max; j++){
			_A[i][j] = aux[i][j] * (1.0 / (float)*detA);
		}
	}
}

void IniciarValores(float A[Max][Max], float b[Max]){
	int i, j;
	printf("=-=-=-=-=-= Valores da matriz =-=-=-=-=-=\n");
	for(i = 0; i < Max; i++){
		for(j = 0; j < Max; j++){
			printf("Informe o elemento (%i,%i): ", i, j);
			scanf("%f", &A[i][j]);
		}
	}
	printf("\n\n=-=-=-=-=-= Valores do vetor =-=-=-=-=-=\n");
	for(i = 0; i < Max; i++){
		printf("Informe o elemento (%i): ", i);
		scanf("%f", &b[i]);
	}
	system("cls");
}

unsigned short int VerificarMatrizNulo(float A[Max][Max]){
	int i, j;
	for(i = 0; i < Max; i++){
		for(j = 0; j < Max; j++){
			if(A[i][j] != 0)
				return 0;
		}
	}
	return 1;
}

void main(){
	//matriz informada pelo usuario
	float A[Max][Max];// = { { 3.1424, 2.6474}, {-1.3456, 2.1234} };
	//matriz inversa da matriz informada pelo usuario
	float _A[Max][Max];
	//vetor informado pelo usuario.
	float b[Max];// = { 1, 2 };
	//soluçao do sistema linear
	float X[Max];
	//determinante da matriz informada pelo usuario
	float detA;
	//iniciando os valores da matriz e vetor
	IniciarValores(A, b);
	//verificando se a matriz é nula.
	if(VerificarMatrizNulo(A))
	{
		printf("====================================\n");
		printf("=     Matriz informada eh nula     =\n");
		printf("====================================\n\n");
		return;
	}
	//verificando se o determinante é nulo.
	if(VerificarResultadoDeterminante(A, b) == 2)
	{
		//calculando determinante da matriz A.
		CalcularDeterminante(A, &detA);
		
		//mostrando dados
		printf("\nMatriz A: \n");
		MostrarMatriz(A);
		printf("\nVetor b: \n");
		MostrarVetor(b);
		// mostrando o valor do determinante.
		printf("\nDeterminante: %.4f\n", detA);
		//Calculando inversa da matriz A e mostrando o seu valor.
		CalcularInversaA(A, _A, &detA);
		printf("\nMatriz inversa A: \n");
		MostrarMatriz(_A);
		//Calculando a soluçao do sistema linear e mostrando o seu valor.
		printf("\nVetor X: \n");
		MultiplicarMatrizPorVetor(A, b, X);
		MostrarVetor(X);
	}
	
	//================================================
	printf("\n\n\n");
	system("pause");
	system("cls");
}
